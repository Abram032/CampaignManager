@page "/templates/locations"
@using CampaignManager.Models
@using Microsoft.Extensions.Configuration
@using CampaignManager.App.Components.Forms

@inject IConfiguration Configuration
@inject HttpClient http

<h1>Template objects</h1>

@if (!isLoaded)
{
   <Loader></Loader>
}
else
{
    <a class="btn btn-success mb-3 mt-3" type="button" href="/templates/locations/add"><span class="fas fa-plus mr-2"></span>Add</a>

    <table class="table table-hover">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th>Name</th>
                <th>Location</th>
                <th>Country</th>
                <th>Coalition</th>
                <th>Services</th>
                <th>Item count</th>
                <th>Edit</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Locations.Count; i++)
            {
                int index = i;
                <tr>
                    <th scope="row">@(index + 1)</th>
                    <td>@Locations[index].Name</td>
                    <td>@Locations[index].Coordinates.Latitude, @Locations[index].Coordinates.Longitude</td>
                    <td>@EnumExtensions.GetDescription(Locations[index].Country)</td>
                    <td>@EnumExtensions.GetDescription(Locations[index].Coalition)</td>
                    <td>@String.Join(", ", Locations[index].Services)</td>
                    <td>@Locations[index].Items.Count</td>
                    <td>
                        <a class="btn btn-warning" type="button" href="/templates/locations/edit/@Locations[index].Id">
                            <span class="fas fa-edit"></span>
                        </a>
                    </td>
                    <td>
                        <button class="btn btn-danger" type="button" @onclick="(() => DeleteAsync(Locations[index].Id, Locations[index].CampaignId))">
                            <span class="fas fa-trash"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code
{
    private bool isLoaded;
    private List<Location> Locations = new List<Location>();

    protected override async Task OnInitializedAsync()
    {
        var url = $"{Configuration["ApiUrl"]}/Locations?campaignId={Guid.Empty}";
        Locations = (await http.GetFromJsonAsync<IEnumerable<Location>>(url)).ToList();
        isLoaded = true;
    }

    private async Task DeleteAsync(string id, string campaignId)
    {
        var url = $"{Configuration["ApiUrl"]}/Locations/{id}?campaignId={campaignId}";
        await http.DeleteAsync(url);
        await OnInitializedAsync();
    }
}
