@page "/campaigns/{Id:guid}"
@using Microsoft.Extensions.Configuration
@using CampaignManager.App.Components.Forms
@using CampaignManager.Models

@inject IConfiguration Configuration
@inject HttpClient http
@inject IJSRuntime js

<h1>Campaign - @campaign.Name</h1>

@if (!isLoaded)
{
    <Loader></Loader> 
}
else
{
    <div>
        <a class="btn btn-warning" href="campaigns/edit/@campaign.Id"><span class="fas fa-edit mr-2"></span>Edit</a>
    </div>
    <div>
        <button class="btn btn-danger"><span class="fas fa-door-closed mr-2"></span>End campaign</button>
    </div>

    <div class="row">
        <div class="col-6">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th>Name</th>
                        <th>Country</th>
                        <th>Coalition</th>
                        <th>Budget</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < campaign.Participants.Count; i++)
                    {
                        int index = i;
                        <tr>
                            <th scope="row">@(index + 1)</th>
                            <td>@campaign.Participants[index].Name</td>
                            <td>@EnumExtensions.GetDescription(campaign.Participants[index].Country)</td>
                            <td>@EnumExtensions.GetDescription(campaign.Participants[index].Coalition)</td>
                            <td>@campaign.Participants[index].Budget</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="col-6">

        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th>Name</th>
                        <th>Country</th>
                        <th>Coalition</th>
                        <th>Services</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < locations.Count; i++)
                    {
                        int index = i;
                        <tr>
                            <th scope="row">@(index + 1)</th>
                            <td>@locations[index].Name</td>
                            <td>@EnumExtensions.GetDescription(locations[index].Country)</td>
                            <td>@EnumExtensions.GetDescription(locations[index].Coalition)</td>
                            <td>@String.Join(", ", locations[index].Services)</td>
                            <td>@EnumExtensions.GetDescription(locations[index].Status)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@code
{ 
    [Parameter]
    public Guid Id { get; set; }
    [Parameter]
    public Guid CampaignId { get; set; }

    private bool isLoaded;
    private Campaign campaign = new Campaign
    {
        Id = Guid.NewGuid().ToString(),
        CampaignId = Guid.Empty.ToString(),
        Participants = new List<Participant>(),
        Missions = new List<Mission>(),
        IsActive = true
    };

    private List<Location> locations = new List<Location>();

    protected override async Task OnInitializedAsync()
    {
        var campaignUrl = $"{Configuration["ApiUrl"]}/Campaigns/{Id}";
        campaign = await http.GetFromJsonAsync<Campaign>(campaignUrl);
        var locationsUrl = $"{Configuration["ApiUrl"]}/Locations?campaignId={CampaignId}";
        locations = (await http.GetFromJsonAsync<IEnumerable<Location>>(locationsUrl)).ToList();
        isLoaded = true;
    }
}