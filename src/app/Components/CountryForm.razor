@using Microsoft.AspNetCore.Components.Forms;
@using Microsoft.Extensions.Configuration;
@using Newtonsoft.Json; 
@using CampaignManager.Models;

@inject IConfiguration Configuration

<EditForm Model="@country" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <p>
        <label>
            CampaignId:
            <InputText @bind-Value="CampaignId.ToString()" />
        </label>
    </p>
    <p>
        <label>
            Id:
            <InputText @bind-Value="Id.ToString()" />
        </label>
    </p>
    <p>
        <label>
            Name:
            <InputText @bind-Value="country.Name" />
        </label>
    </p>
    <button type="submit" />
</EditForm>


@code
{
    [Parameter]
    public Guid CampaignId { get; set; } = Guid.Empty;
    [Parameter]
    public Guid Id { get; set; } = Guid.Empty;

    private Country country = new Country();

    protected override async Task OnInitializedAsync()
    {
        var url = $"{Configuration["ApiUrl"]}/Country?campaignId={CampaignId}&id={Id}";
        var client = new HttpClient();
        var response = await client.GetAsync(url);
        if(response.IsSuccessStatusCode)
        {
            country = JsonConvert.DeserializeObject<Country>(await response.Content.ReadAsStringAsync());
        }
    }

    private async Task HandleValidSubmit()
    {
        var url = $"{Configuration["ApiUrl"]}/Country?campaignId={CampaignId}&id={Id}";
        var client = new HttpClient();
        if(Id.Equals(Guid.Empty))
        {
            await client.PostAsJsonAsync<Country>(url, country);
        }
    }
}